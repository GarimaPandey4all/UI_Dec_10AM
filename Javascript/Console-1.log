a = 10
10
a
10
b = 20
20
b
20
a + b
30
a - b
-10
a / b
0.5
a * b
200
typeof(a)
'number'
typeof(b)
'number'
c = 0.5
0.5
typeof(c)
'number'
d = 'hello'
'hello'
typeof(d)
'string'
typeof(e)
'undefined'
a = '10'
'10'
typeof(a)
'string'
a + b
'1020'
a -b
-10
a /b
0.5
a * b
200
d = 10
10
a == d
true
a === d
false
arr = [12, 45, 6, 8, 9, 19];
    
(6) [12, 45, 6, 8, 9, 19]0: 121: 452: 63: 84: 95: 19length: 6[[Prototype]]: Array(0)at: ƒ at()concat: ƒ concat()constructor: ƒ Array()copyWithin: ƒ copyWithin()entries: ƒ entries()every: ƒ every()fill: ƒ fill()filter: ƒ filter()find: ƒ find()findIndex: ƒ findIndex()findLast: ƒ findLast()findLastIndex: ƒ findLastIndex()flat: ƒ flat()flatMap: ƒ flatMap()forEach: ƒ forEach()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()lastIndexOf: ƒ lastIndexOf()length: 0map: ƒ map()pop: ƒ pop()push: ƒ push()reduce: ƒ reduce()reduceRight: ƒ reduceRight()reverse: ƒ reverse()shift: ƒ shift()slice: ƒ slice()some: ƒ some()sort: ƒ sort()splice: ƒ splice()toLocaleString: ƒ toLocaleString()toString: ƒ toString()unshift: ƒ unshift()values: ƒ values()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}[[Prototype]]: Object
arr
(6) [12, 45, 6, 8, 9, 19]
typeof(arr)
'object'
arr[3]
8
document
#document
window
Window {window: Window, self: Window, document: document, name: '', location: Location, …}
